# Keycloak
kind: ConfigMap
apiVersion: v1
metadata:
  name: keycloak
data:
  quarkus-realm.json: |
    {
      "id" : "3f3c9904-68ef-49c0-851f-79244d8d7209",
      "realm" : "quarkus",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "none",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "f1c57b1c-e4ea-4d05-8176-cb4134949a66",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "3f3c9904-68ef-49c0-851f-79244d8d7209",
          "attributes" : { }
        }, {
          "id" : "549ed68f-96ed-4cff-a939-e5870f9d3637",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "3f3c9904-68ef-49c0-851f-79244d8d7209",
          "attributes" : { }
        }, {
          "id" : "06be1493-a0f3-428b-ba4a-7dae4aee4f79",
          "name" : "default-roles-quarkus",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization" ],
            "client" : {
              "account" : [ "manage-account", "view-profile" ]
            }
          },
          "clientRole" : false,
          "containerId" : "3f3c9904-68ef-49c0-851f-79244d8d7209",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "1380961b-e50e-46f9-8ad9-3bf28514a618",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "cb21be60-c1c2-4afc-a60a-049561d72f93",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "bac73787-5aaa-48bb-82f3-2f1f84121eca",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "9130aae9-b536-4647-bd5a-3726f222407b",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "f227fca3-b175-4604-ac26-f3ebf96a92c9",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "5bc94228-f46b-4df4-b990-1ace1f7459e6",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-users", "query-groups" ]
              }
            },
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "cfa86183-92fb-4b5f-9d8e-6d4f48ad3ded",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "a62cd4b0-0968-452b-a797-ef10780b0df2",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "73a6d78d-b467-468a-b096-d90e496832a5",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "c1ffc9d6-c10d-4ec3-87d1-29197950276e",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "1fe07cb1-c5a3-41d2-8bff-1215bb825bbc",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "2c10a6f4-81bd-4fb0-812e-b159dfa2cf84",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "133dd2aa-68de-48f9-ab8c-1bc7654e7fbc",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "8445cfa6-80cf-44eb-826c-90653c120809",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "fc44911e-249f-4afa-aed1-13a2dbb37494",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "51e6c4b8-93eb-4ce6-877b-2951d19daf00",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "8524a952-48f3-4775-a47c-6edcf272f976",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "view-authorization", "view-events", "impersonation", "manage-users", "view-users", "manage-authorization", "view-clients", "query-clients", "view-realm", "manage-identity-providers", "view-identity-providers", "manage-clients", "query-groups", "create-client", "query-users", "manage-events", "manage-realm", "query-realms" ]
              }
            },
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "753787e0-2c23-413e-b3ca-4e06c0912856",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          }, {
            "id" : "8aed0af3-f641-43f9-b59f-1f6015e92589",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "268df12d-5a17-4380-8e21-9a7a3734194f",
            "attributes" : { }
          } ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "account-console" : [ ],
          "quarkus-app" : [ ],
          "broker" : [ {
            "id" : "5bf0c182-3cd9-423f-a960-6b0183871b23",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e7b0e1b1-af4c-4d0f-9f9e-db970bdf5ca0",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "7bccadb0-e358-4fd0-b97d-23cca4edc6b4",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          }, {
            "id" : "f6974d06-8428-419b-8e2d-b468564b2893",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          }, {
            "id" : "6c097802-d35d-4b97-95e7-db155e2b6d9c",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          }, {
            "id" : "203762cb-8fda-4f30-a840-9e48dba770cd",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          }, {
            "id" : "0c3b9545-55da-4ef5-bd16-d4ad3d12822a",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          }, {
            "id" : "9c83aad7-397e-4683-9f17-7db81ac82d4f",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          }, {
            "id" : "b6a2caa6-45ce-4419-b8be-b40de64006bd",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "3386f3a2-f16a-4662-bfed-9449491b4421",
            "attributes" : { }
          } ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "06be1493-a0f3-428b-ba4a-7dae4aee4f79",
        "name" : "default-roles-quarkus",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "3f3c9904-68ef-49c0-851f-79244d8d7209"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "users" : [ {
        "id" : "b209d5ae-6dc0-4e93-a17d-ee261d12533f",
        "createdTimestamp" : 1725477219897,
        "username" : "alice",
        "enabled" : true,
        "totp" : false,
        "emailVerified" : true,
        "firstName" : "",
        "lastName" : "",
        "email" : "alice@foo.bar",
        "credentials" : [ {
          "id" : "5e6156d9-9cae-44d4-9882-a8a1297bd2b2",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1725477230684,
          "secretData" : "{\"value\":\"NZgWzgcWZzNTEJYCs5xS+UUvdnKO88l2q9kOJ5RPDdheMxI6b2sHd+twJbR4O5CET3xASPZ/3af7TTF2EmcHEg==\",\"salt\":\"ZDYSRvosdi/DLiEGC5a6NA==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-quarkus" ],
        "notBefore" : 0,
        "groups" : [ ]
      }, {
        "id" : "4de10427-2f3e-49f9-b7b1-0ed59118d611",
        "createdTimestamp" : 1725477246263,
        "username" : "bob",
        "enabled" : true,
        "totp" : false,
        "emailVerified" : true,
        "firstName" : "",
        "lastName" : "",
        "email" : "bob@foo.bar",
        "credentials" : [ {
          "id" : "860af0e3-0563-4274-b720-318c52468958",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1725477257225,
          "secretData" : "{\"value\":\"ZTv19/yLGPT0hGp/9yauTfzjX6JM6+9s5Sh4Xnk+KW3FPC+fkrTpQOR3nYU/gpXeCyUW/br0eVuc11qZiZtTaA==\",\"salt\":\"/Q9NzfoSYWj3g5UmQGfKJg==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-quarkus" ],
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account" ]
        } ]
      },
      "clients" : [ {
        "id" : "3386f3a2-f16a-4662-bfed-9449491b4421",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/quarkus/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/quarkus/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "e50b2d45-af9b-4652-9240-2c07d4fafffb",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/quarkus/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/quarkus/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "89b03299-3658-4e23-a58a-b0f5b5d1340d",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "44d6afc8-68d4-4638-85ae-d2f2776de420",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "e7b0e1b1-af4c-4d0f-9f9e-db970bdf5ca0",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b136ff00-c0fc-49c2-a4cc-01a3d3833a5f",
        "clientId" : "quarkus-app",
        "name" : "",
        "description" : "",
        "rootUrl" : "",
        "adminUrl" : "",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "*" ],
        "webOrigins" : [ "*" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "oidc.ciba.grant.enabled" : "false",
          "display.on.consent.screen" : "false",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.session.required" : "true",
          "backchannel.logout.revoke.offline.tokens" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "268df12d-5a17-4380-8e21-9a7a3734194f",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "5aba2fa4-ab41-4ad2-87e9-07ca2bc542ab",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/quarkus/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/quarkus/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "1287da99-beda-4ba2-9095-e09c35098350",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "902e4e1e-80bc-4eb3-91ae-9a6e66a66932",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${profileScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "2e7bc843-5c22-451f-a075-b0f237910c3d",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "7f119104-6e4c-4e97-a86c-aad2b2f5c9a5",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "98bb18d5-6a68-4579-86d0-f4b9f29bd40b",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "b483c628-2360-485e-abdd-f2991cc126a4",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "6665dc65-c2d5-4bf8-9890-3d3d789fab73",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "5a77c1e4-bedb-4491-bc03-537095565da1",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "29f95d4a-a12d-4d1c-a6b1-d7ac7943b4d7",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "b686ae06-6e25-4fad-bec8-90782910dbd7",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "30b39b42-d0a2-4802-9092-b12a1fdd961e",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "3f82810d-0b25-43f7-83c3-9ffcf59b83c2",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "a8ec9467-fd68-4798-9ffc-e8affb12f34d",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "878157dd-7abd-4954-84e6-3419d58e2a08",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "53e0e8e4-d136-4de5-8b95-f40760b28873",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "67ac9268-363d-4713-b65d-8b561328c52c",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "d3d73a7e-f182-41db-bfce-3de89cbe2fe7",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "c2b43606-e6a7-42ad-9148-b66750ae5c50",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "9f0b8274-247b-46da-999a-3222317cc7fc",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "9311fefb-6797-41f5-a01b-fb3b2be36a65",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "cd963f8e-a155-432e-938f-b1f1f2cf23eb",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${rolesScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "8eaafd1d-9e9a-48ee-9008-7530218767a1",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "9c10c861-2336-4296-ba0a-d9e93ad01398",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "ea57f229-629f-44e8-b3a3-abefc22c8cd3",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "d921e223-56c7-4bc9-affe-8e1e8104b475",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false",
          "consent.screen.text" : ""
        },
        "protocolMappers" : [ {
          "id" : "e79e6e59-f3ca-4c41-b891-3b6b4d7f62a9",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "89202648-d4e4-4659-8ceb-49802093c202",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${emailScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "fb82bed2-ebb9-4d5a-a206-dc385a83d416",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "502a8ca1-8e9e-433e-938f-60cea833966b",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "ce9930f8-b261-4a46-96f6-b400256ed6d4",
        "name" : "acr",
        "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "4db0b59d-4828-40bf-8185-d5a8407d3cb6",
          "name" : "acr loa level",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-acr-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "66dbed51-edff-424f-a4eb-279912cc04f0",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "16256369-a2c4-4198-b005-11cabffafab6",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "ad149295-2772-45ac-8b53-9c1d8ec2e1ac",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "65b7afb6-b2a8-4f78-b93d-9f973bc76507",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "816fe3d5-792a-4393-82d1-e73e8599e840",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "multivalued" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "3ade7fac-a253-4b14-865c-d6b4b3abae8a",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${addressScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "82a7589f-d9cd-4064-b0a5-6072d5815121",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "email", "profile", "roles", "acr", "web-origins" ],
      "defaultOptionalClientScopes" : [ "address", "microprofile-jwt", "phone", "offline_access" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "8523ac89-1d63-4724-821d-7183b36c2271",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper" ]
          }
        }, {
          "id" : "a47dc0fb-774f-4a35-a8f4-b1e15ea6b739",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "6e0c8b0f-ce5e-4505-89d4-a62f957c6c28",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        }, {
          "id" : "bb6c6988-6929-4d4f-85e9-32cca4c9d3d4",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "86cbf30f-b25e-4e6d-856a-abf3e79ab799",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "b3dbc29c-5ed7-42d1-a5b6-deeecadc2038",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "8c658a39-31bc-47bb-a359-c6c7bcc8170e",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "c2978b63-6a41-4595-a174-c021eddc7481",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "90d50447-a409-4657-8dd4-26f0e5132c57",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEpAIBAAKCAQEApRtD+e3HYvC2FkqNnkBfM8rXOCDzOtsjl8kjazTXkLeeX18CHr8doiHIgEyT7n/U3M56cm0OZzwparbZZ9BtPliOirMgSq5YKCoIbE/WssLtvewdDMyLs74fIaKoxfCzNxIDRL/pXlUCNenizF/uDuQMnczop10cSiMR7VRpCLMgSJhwZOaDup/k7eYepvxf5yqwTi6l7jPOZudiBgw+OLbl1lZB2+84VqkpTZEX8eauYjSeufDDavTAgl4C7JZW8fDRQoA90yqCYenGhF1qmFSZJXn7fC77VxBu6beYbdKpoNNbN2ClD7e5/k75mJso7aHwTPSAE8NoYEN7v5F9kQIDAQABAoIBAAL/wfonin1SqOUSYzyIV+5ceTCz4QUs+zpX6Qq6y85dNn1OIA9LyouSFGa3tWFx/R1qav0ae+YuSKSPiBcPmTdmY4bzkmLm5DMtEch5YgmO2sOOFxg/HCvGeKFrV2haix/VRf3NBF2+Oq885Y2vsabft7azVNfK7D9QwCPs6khCFLKXYVyh+2MGqoOBu0gAIiMBToAOK4Qx2nr7OuBy7lu4JjgIaelktq7+ySDr3a4xrJAgQP7jkaUZNCf/VH1zuoow3CSz8VjvrErwqiuV9g66WCS3Q4ml95kn2+OzCZLwgNIYDUOaH2fPl/+K6QgZFrjlhTRs5GKmEi+ruDGGmWECgYEA42MNZqq2lFAvCwQxRZdu7FfusVS/xM6HhymgMbP1Nc10EtwBL3bt6JVEoY7V7GQB6bzq0iYV4Y/5kfcQKmpYbWlLZDq5d4c59ilvpx97cRsTgKye+L6trOYkdq+wYJtDayDJ/f1zctT9y9PK2szCF1WX5aH0vRSZQvqa0lEi4uECgYEAueHwEP7qNyi7i2yF8i9NxJo6NQ+8Cfiu8TBbXdGBnd8FmlBqq0tLIwH0J66akZFWumSt3SjC2140sUNOfltaGTzdGt5xKWDxUYB8kmrO/iOrAcxvRXo8E1Er1DGac/kymNbcwk47hoPlbJ/srzLUXOdhNT7Zk+tnM391NtNmoLECgYEA1nPH4skkcxKAm6Izmg+tNMflvWdRiZrDJU2z4Mx5emmvjE3j7FD9JfsJhFlDFrRnPXvH97SltFtmJCzgGTC8/0tsKDZeTwXBO5Fu1S6S7GR960BimfSztbpEL4+ZCDPGzNVay+nqpSWNy1uPGPY+I2W9YXxyZpVzykCyHaMaBOECgYB8IixlzTawe10zcNfKslhm8O/qO4XByvdZTofVkXHT8foV4Zo6pl+ZE1bvoSTMDZkzhMSvKudmA/WAY4hpzavPqtulc+NyVLETUpDeXsG46izrWJD+fvDbnZt9a1rQFBz8AJEQmZoa7L4r2mj/Xxx+pm4+VqiKpewXcgjfAjJJIQKBgQC3K+HD0YEQvMw5JpGQG/albqAzzKzG86dd02dsKLS0wRFL8O95EFJJbV6VCiyOG06uC+ka/iX3lfVBaUO8TmLF2JvMehlSYGQi9OfefbmCVx5wLFPp6JmArgdyl1A08Ty5DXdI6yQoc1CFW8+Ks7Z8l4Sf7HGHK8Q4bQYpFXG0Zg==" ],
            "keyUse" : [ "SIG" ],
            "certificate" : [ "MIICnTCCAYUCBgGRvnSCgzANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTI0MDkwNDE5MTEzMloXDTM0MDkwNDE5MTMxMlowEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKUbQ/ntx2LwthZKjZ5AXzPK1zgg8zrbI5fJI2s015C3nl9fAh6/HaIhyIBMk+5/1NzOenJtDmc8KWq22WfQbT5YjoqzIEquWCgqCGxP1rLC7b3sHQzMi7O+HyGiqMXwszcSA0S/6V5VAjXp4sxf7g7kDJ3M6KddHEojEe1UaQizIEiYcGTmg7qf5O3mHqb8X+cqsE4upe4zzmbnYgYMPji25dZWQdvvOFapKU2RF/HmrmI0nrnww2r0wIJeAuyWVvHw0UKAPdMqgmHpxoRdaphUmSV5+3wu+1cQbum3mG3SqaDTWzdgpQ+3uf5O+ZibKO2h8Ez0gBPDaGBDe7+RfZECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAjC0+mS9Kc5NpssWf/yruyyWafFGflN/h7ZxXbB52GeO3qiYW39lv/3fi2KbfDQ0AzbCI9eAFYGwpyusNvaywnJ3/Jd25DWxTkekFarulCX5Zv3sB6fCVZE7RFlemwR1xul7VFkkgx7/0JMzllyfH0LE2bVTkWe2PASwfQyKjLJJEpMzZdx3pJlDtIx1HD58M5qx/0GM3+8S4Iz9EnrcoJewQ7fVegAiaH2NYz4uwiLi3SfCg70xTu/MOzU56sEFLgn75Fw/t8ZIPwo5wosWLBSEcuhNbdfgNgcOaZYbNVc7lNv/1m4QPegmhXAEFacoC1ExolrK3Hbef27+csHtMrw==" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "8e7fc0ae-43f3-4ea2-a31c-bdd67f62d233",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEogIBAAKCAQEAr2IoLQRfBVhhvog07VZLF68qdEzGpgmUu2Sz1yQt58YbhBSYBYvKMKhte/mlibU9/iSTi0KkYx4JDW3I1fx8lwClXr75gSqH4GjmEUEdymiRfgiCel1GUlLwoajqOJutrR6QSsMNyts/GbSuRbo4krGtYpbFgbyJjm+zLvJDuZTmjBA4pQi1iTHCd7STVkuEOfWyPJDHO5RcbCow07ACh3rMypV9wfD4Bde7Pkk0y9rl2Yr5arCxrCezuefwwL6kLO0aoKoOrsZxIY8Y6Cgwj4qkdgH0xdU6e3kbFV3TpZsgZS6NHMoG/zZlCn9MZNqBl7sgx5bw6Rx9xvi5bohtewIDAQABAoIBAA+EVAuk6bHztN+CS4nSwF1oaQ2AcXQ6lXHS92UJ1WnpNCwGamuAh7NbDidm2geKBTcZY1hx3VDLqn9eqY3igzS/oOH2FuXKWS/jTV+qGYmmoMtm01ciLi5Ab6Z4kb3PwEOjLZ7/t5ZYDt17so4xa1SclbuK8rncxXWDBSEahsrCGouhyuNp5ms1o0Tio76mxPiuWnjvxeEj5h38PqT2kHfDQ5WOEVImRBm9uIfyYL5kqjtZuXe+mKgGwiJWQPnz+W1/Tj8Eq4/lKIpg4gOg7RJAjgQO3CmX6wis2UFr5fo5BfT89PL2FZptX/6RkcJHSXRKOavE2YubZmJXzjRhjaECgYEA43kOZm081TSj9ZxZzsnxPtyl0essvLj+FmffsI1jCe47PNUg8BaT/6xi+EKHlNfMJDGndEgAP4wPf9KUfyiNd2tDgziuZsu8ZCGDvUyD0zOhsxcAEhhr8dGC3arNlZK+5idqDuC+HEQwdLDmNUDUAag26WTddklHHA3memGPxEsCgYEAxWDJG9oiAb9aDJ3fGn8kwyi+ZKdqL6UFAbEByWD85GwMxhhwHUghfPpCspL2JfXonLc9iVaqmagmAAW+SgL+nsqbfUE1MBiTra9J9fcjtVQgYlrc2RsqiGfq8L6AbwRC1x9lTqEMBkIJaHx/CrJsf92xmtt0FvxU3BNdmhiBXZECgYAjrlF775ajOuadGDFeJn8ZBTNdgi46TCpPCWwlHYhzflL8b9IC1wfQCxJbLtRlnJQA+Wjy7Hhdf3LO8hEpAQtvt/uXEcUJitu6OSeZAe+LqYWruefg7sO/4sVMUAZ/d81J/NS+ELLBbFDNfRIfOFQJDoHOimvSqhvlYqjMeZE7kQKBgBKnjRpWyXQE08vxd86XSbAwP55fvEd4fzqjshmIUx57n9FxKdd6o7+eH4OlJCJ+VVfKccRzLniLTdwertdr5Qi4+W0jJpW/HOYDdSgMDZHru4vQLqNOT/zIZYoPVzAm5PJUA00lJ2/H+f+oFJG8P0jueQS7zQMHIjYSlnwj6MYhAoGAeY+QF0x4ZzaW+/w841FaBuHYxqLH0EKIShQsDwF6uLKEvIJ0mYtPHzPAZ/Vg3LPSCmHHIy+EIpnoepcJyOpCHYV8cyLXL3fy1buMmK/fXXdF/0vI/v2+GM6qy7GqIKh2VWLt6PwT7lbJ57t8ZHBk+fJApKGhTAKGFdJJdFJWsSs=" ],
            "keyUse" : [ "ENC" ],
            "certificate" : [ "MIICnTCCAYUCBgGRvnSC2DANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTI0MDkwNDE5MTEzMloXDTM0MDkwNDE5MTMxMlowEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9iKC0EXwVYYb6INO1WSxevKnRMxqYJlLtks9ckLefGG4QUmAWLyjCobXv5pYm1Pf4kk4tCpGMeCQ1tyNX8fJcApV6++YEqh+Bo5hFBHcpokX4IgnpdRlJS8KGo6jibra0ekErDDcrbPxm0rkW6OJKxrWKWxYG8iY5vsy7yQ7mU5owQOKUItYkxwne0k1ZLhDn1sjyQxzuUXGwqMNOwAod6zMqVfcHw+AXXuz5JNMva5dmK+Wqwsawns7nn8MC+pCztGqCqDq7GcSGPGOgoMI+KpHYB9MXVOnt5GxVd06WbIGUujRzKBv82ZQp/TGTagZe7IMeW8Okcfcb4uW6IbXsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEABZ044X/1wTQsMntUvyOjhbPCqzipph37bgUIzquNG6Uunf/Jdyj8mirDvUjyoByRov58rqBfRr8yh6tgmdB0PAe7J2mGrPzBBmEmm9QAgiPQitafFTOQKuJ+5RIAl5kFgQlZ9J4t+xCrq5QcQcfEuS2HxR3gqWRIes31lLWVn91N9uxtM64fduJWiTIvDzj1bPqit4b1YJQr7/r48Y3/6DNmMvspgkstCdoLD5/TY9/LVePy5Oab0HtXKNuRJNbL95E48tx4sFG+xG3WK0Ozv8StFaCWORrHLj7mWZf2BrWA8S+W8kdmkdB5y/UJrmuPwMiQpRMK/VuwsjgdAX/pcg==" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        }, {
          "id" : "95e3d6c1-e86f-4cc6-9a14-a31aa14a4fdd",
          "name" : "hmac-generated",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "ddced3c2-f302-4912-9200-ef4ef0800ee0" ],
            "secret" : [ "DvvA8miXVIy-3irVcBE-_oKHJeljFzh4KIBznSOIWrCgLwG2JYJLKPy1JE6YMfIXWlk79v4k8PD56hnzWGM1dg" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS256" ]
          }
        }, {
          "id" : "9b11bd6d-7b75-4609-848f-51f016cde477",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "a1ff7cc2-844f-4c88-90e3-ac7ce8aa580f" ],
            "secret" : [ "q0t8rA4dbLdimDs3j7kiTA" ],
            "priority" : [ "100" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "d0259660-2d0d-4858-876d-79de9cdb20ed",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3cd3e293-f72b-4568-8510-17dba3825cad",
        "alias" : "Authentication Options",
        "description" : "Authentication options.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "basic-auth",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "basic-auth-otp",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "907d4ca3-9736-4c5a-a8ce-04b790058294",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "8ace2a4e-4525-4147-abb0-ab903a97462e",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "1cce85fc-2d88-4696-b3c6-69e112302187",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "8165c243-4210-49cf-b3b8-356f2cdba944",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "627e6d2f-fa0e-48cf-a9d4-bc53b8f44663",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "15fa77bb-d46a-4a10-b17d-f87242c72c6f",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6670ea11-232a-4ea9-acb7-75021c11585b",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "593c2e6a-9484-425a-aead-54f6e89a7f34",
        "alias" : "browser",
        "description" : "browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "b2e82303-2b4c-47cd-b75f-95c8bde6d0cb",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "a02da95e-39bf-4a51-972c-70b61e4141b7",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3afdd8bc-f612-4d23-809b-cc7513906e62",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "33f1330a-9741-445e-bc79-2b79c3acc6dd",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f2dda1f5-515b-43df-9d0f-52602c6a0a2a",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "23da523d-f213-48b1-8492-6ac1594cfede",
        "alias" : "http challenge",
        "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "no-cookie-redirect",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Authentication Options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "c7d03064-6ada-4623-b802-04f4c78b94c3",
        "alias" : "registration",
        "description" : "registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "e221fe56-6fc9-4f2c-aee1-91e49cec1745",
        "alias" : "registration form",
        "description" : "registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-profile-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "12d2e28e-afd3-4238-9355-d72ffaab9273",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "31c0f3cf-b0bd-44a8-8177-fe48c34925b7",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "186df5a2-71b9-4678-a972-5bc776519c6b",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "e980a093-8bb5-44f4-b026-28640769f939",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "terms_and_conditions",
        "name" : "Terms and Conditions",
        "providerId" : "terms_and_conditions",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "webauthn-register",
        "name" : "Webauthn Register",
        "providerId" : "webauthn-register",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 70,
        "config" : { }
      }, {
        "alias" : "webauthn-register-passwordless",
        "name" : "Webauthn Register Passwordless",
        "providerId" : "webauthn-register-passwordless",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 80,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaExpiresIn" : "120",
        "cibaAuthRequestedUserHint" : "login_hint",
        "oauth2DeviceCodeLifespan" : "600",
        "oauth2DevicePollingInterval" : "5",
        "parRequestUriLifespan" : "60",
        "cibaInterval" : "5"
      },
      "keycloakVersion" : "19.0.2",
      "userManagedAccessAllowed" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:25.0.2
          args: ["start-dev", "--import-realm"]
          env:
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
          volumeMounts:
            - mountPath: /opt/keycloak/data/import
              name: keycloak-realms
      volumes:
        - name: keycloak-realms
          configMap:
            name: keycloak
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: keycloak
  name: keycloak
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: keycloak
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          resources:
            limits:
              memory: 150Mi
          volumeMounts:
            - mountPath: /data
              name: data
          env:
            - name: POSTGRES_DB
              value: quarkus
            - name: POSTGRES_USER
              value: quarkus
            - name: POSTGRES_PASSWORD
              value: quarkus
            - name: PGDATA
              value: /data/pgdata
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  clusterIP: None

