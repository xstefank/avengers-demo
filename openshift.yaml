# Keycloak
kind: ConfigMap
apiVersion: v1
metadata:
  name: keycloak
data:
  car-rental.json: |
   {
     "id" : "2322f9de-770b-424e-8295-652358185f4c",
     "realm" : "quarkus",
     "displayName" : "",
     "displayNameHtml" : "",
     "notBefore" : 0,
     "defaultSignatureAlgorithm" : "RS256",
     "revokeRefreshToken" : false,
     "refreshTokenMaxReuse" : 0,
     "accessTokenLifespan" : 300,
     "accessTokenLifespanForImplicitFlow" : 900,
     "ssoSessionIdleTimeout" : 1800,
     "ssoSessionMaxLifespan" : 36000,
     "ssoSessionIdleTimeoutRememberMe" : 0,
     "ssoSessionMaxLifespanRememberMe" : 0,
     "offlineSessionIdleTimeout" : 2592000,
     "offlineSessionMaxLifespanEnabled" : false,
     "offlineSessionMaxLifespan" : 5184000,
     "clientSessionIdleTimeout" : 0,
     "clientSessionMaxLifespan" : 0,
     "clientOfflineSessionIdleTimeout" : 0,
     "clientOfflineSessionMaxLifespan" : 0,
     "accessCodeLifespan" : 60,
     "accessCodeLifespanUserAction" : 300,
     "accessCodeLifespanLogin" : 1800,
     "actionTokenGeneratedByAdminLifespan" : 43200,
     "actionTokenGeneratedByUserLifespan" : 300,
     "oauth2DeviceCodeLifespan" : 600,
     "oauth2DevicePollingInterval" : 5,
     "enabled" : true,
     "sslRequired" : "none",
     "registrationAllowed" : false,
     "registrationEmailAsUsername" : false,
     "rememberMe" : false,
     "verifyEmail" : false,
     "loginWithEmailAllowed" : true,
     "duplicateEmailsAllowed" : false,
     "resetPasswordAllowed" : false,
     "editUsernameAllowed" : false,
     "bruteForceProtected" : false,
     "permanentLockout" : false,
     "maxFailureWaitSeconds" : 900,
     "minimumQuickLoginWaitSeconds" : 60,
     "waitIncrementSeconds" : 60,
     "quickLoginCheckMilliSeconds" : 1000,
     "maxDeltaTimeSeconds" : 43200,
     "failureFactor" : 30,
     "roles" : {
       "realm" : [ {
         "id" : "7b87d81b-a31b-4fed-b4a6-d1c4a6573449",
         "name" : "uma_authorization",
         "description" : "${role_uma_authorization}",
         "composite" : false,
         "clientRole" : false,
         "containerId" : "2322f9de-770b-424e-8295-652358185f4c",
         "attributes" : { }
       }, {
         "id" : "554c4650-5b54-4589-b1c0-7bfef11ea30b",
         "name" : "offline_access",
         "description" : "${role_offline-access}",
         "composite" : false,
         "clientRole" : false,
         "containerId" : "2322f9de-770b-424e-8295-652358185f4c",
         "attributes" : { }
       }, {
         "id" : "de82eebb-3879-4b36-ba06-e76c0e469ada",
         "name" : "default-roles-quarkus",
         "description" : "${role_default-roles}",
         "composite" : true,
         "composites" : {
           "realm" : [ "offline_access", "uma_authorization" ],
           "client" : {
             "account" : [ "view-profile", "manage-account" ]
           }
         },
         "clientRole" : false,
         "containerId" : "2322f9de-770b-424e-8295-652358185f4c",
         "attributes" : { }
       } ],
       "client" : {
         "realm-management" : [ {
           "id" : "06020076-c7ed-465e-8028-1a3bbcff20bd",
           "name" : "manage-events",
           "description" : "${role_manage-events}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "fe0a3e6e-8f3e-4c66-8902-3cb4abefd1eb",
           "name" : "realm-admin",
           "description" : "${role_realm-admin}",
           "composite" : true,
           "composites" : {
             "client" : {
               "realm-management" : [ "manage-events", "create-client", "manage-authorization", "query-realms", "query-users", "query-clients", "manage-users", "view-events", "impersonation", "manage-identity-providers", "view-authorization", "query-groups", "view-realm", "manage-realm", "view-clients", "view-identity-providers", "manage-clients", "view-users" ]
             }
           },
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "514d879f-1103-429d-9e00-95145c13dbe8",
           "name" : "create-client",
           "description" : "${role_create-client}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "7d2cbcf0-a902-485d-8899-afc16f62a375",
           "name" : "manage-authorization",
           "description" : "${role_manage-authorization}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "a11edf89-adbe-4fa4-8175-d2a0a870bee5",
           "name" : "query-realms",
           "description" : "${role_query-realms}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "f5e60393-aba9-4a3a-9b3d-647ac9704436",
           "name" : "query-users",
           "description" : "${role_query-users}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "b1817723-3952-40ef-b7fb-c201157eb137",
           "name" : "query-clients",
           "description" : "${role_query-clients}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "2dfbeccf-66f4-4b38-bef7-3806788b5af0",
           "name" : "manage-users",
           "description" : "${role_manage-users}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "8abba6e7-644a-4a1f-b62d-f95d34c08ed6",
           "name" : "view-events",
           "description" : "${role_view-events}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "fea4bd2d-3a20-4550-9dd7-0a3206baa321",
           "name" : "impersonation",
           "description" : "${role_impersonation}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "eddffa04-aec1-4ecc-9e1c-13ed864c55a3",
           "name" : "manage-identity-providers",
           "description" : "${role_manage-identity-providers}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "f22feed4-211b-486d-9197-55b573adb867",
           "name" : "view-authorization",
           "description" : "${role_view-authorization}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "ffa8442e-28c5-4b99-a2b1-a6e8f294dc12",
           "name" : "query-groups",
           "description" : "${role_query-groups}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "89662622-25f4-48c0-8c47-699d3c1578c1",
           "name" : "view-realm",
           "description" : "${role_view-realm}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "65a95430-f364-4541-8690-142ce64a1d45",
           "name" : "manage-realm",
           "description" : "${role_manage-realm}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "15b4cd91-6106-4cd2-93b3-0c68aff8fb05",
           "name" : "view-clients",
           "description" : "${role_view-clients}",
           "composite" : true,
           "composites" : {
             "client" : {
               "realm-management" : [ "query-clients" ]
             }
           },
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "8a3ce75e-875a-482e-a836-6bf89c066d6b",
           "name" : "view-identity-providers",
           "description" : "${role_view-identity-providers}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "5ecdf162-185f-40f8-adec-cc77cc01e12b",
           "name" : "manage-clients",
           "description" : "${role_manage-clients}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         }, {
           "id" : "84023c1d-d8ee-4882-87d9-56457431bddf",
           "name" : "view-users",
           "description" : "${role_view-users}",
           "composite" : true,
           "composites" : {
             "client" : {
               "realm-management" : [ "query-groups", "query-users" ]
             }
           },
           "clientRole" : true,
           "containerId" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
           "attributes" : { }
         } ],
         "avenger-client" : [ ],
         "security-admin-console" : [ ],
         "admin-cli" : [ ],
         "account-console" : [ ],
         "broker" : [ {
           "id" : "da95e750-c251-42a9-a92b-92d47579e4e4",
           "name" : "read-token",
           "description" : "${role_read-token}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "84246dea-3d3d-4bad-b54a-03b52581bb22",
           "attributes" : { }
         } ],
         "account" : [ {
           "id" : "5b746c11-515d-4abd-b97a-7e2aea5d83da",
           "name" : "delete-account",
           "description" : "${role_delete-account}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         }, {
           "id" : "7fb7ecb6-d8fa-4b4d-9f15-7cd15c61697e",
           "name" : "view-applications",
           "description" : "${role_view-applications}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         }, {
           "id" : "e825e37e-2915-4e09-bcf8-173c81f1719d",
           "name" : "manage-account-links",
           "description" : "${role_manage-account-links}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         }, {
           "id" : "b930a058-af5d-4f63-8e6e-9f5d07ac60ed",
           "name" : "view-profile",
           "description" : "${role_view-profile}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         }, {
           "id" : "6c204add-c508-4bf2-83e5-4663b6e60071",
           "name" : "manage-account",
           "description" : "${role_manage-account}",
           "composite" : true,
           "composites" : {
             "client" : {
               "account" : [ "manage-account-links" ]
             }
           },
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         }, {
           "id" : "c57ffce2-3661-4886-9ccb-35cf422eacf7",
           "name" : "manage-consent",
           "description" : "${role_manage-consent}",
           "composite" : true,
           "composites" : {
             "client" : {
               "account" : [ "view-consent" ]
             }
           },
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         }, {
           "id" : "0b809950-a422-4090-a994-7d59aeda1af0",
           "name" : "view-consent",
           "description" : "${role_view-consent}",
           "composite" : false,
           "clientRole" : true,
           "containerId" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
           "attributes" : { }
         } ]
       }
     },
     "groups" : [ ],
     "defaultRole" : {
       "id" : "de82eebb-3879-4b36-ba06-e76c0e469ada",
       "name" : "default-roles-quarkus",
       "description" : "${role_default-roles}",
       "composite" : true,
       "clientRole" : false,
       "containerId" : "2322f9de-770b-424e-8295-652358185f4c"
     },
     "requiredCredentials" : [ "password" ],
     "otpPolicyType" : "totp",
     "otpPolicyAlgorithm" : "HmacSHA1",
     "otpPolicyInitialCounter" : 0,
     "otpPolicyDigits" : 6,
     "otpPolicyLookAheadWindow" : 1,
     "otpPolicyPeriod" : 30,
     "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
     "webAuthnPolicyRpEntityName" : "keycloak",
     "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
     "webAuthnPolicyRpId" : "",
     "webAuthnPolicyAttestationConveyancePreference" : "not specified",
     "webAuthnPolicyAuthenticatorAttachment" : "not specified",
     "webAuthnPolicyRequireResidentKey" : "not specified",
     "webAuthnPolicyUserVerificationRequirement" : "not specified",
     "webAuthnPolicyCreateTimeout" : 0,
     "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
     "webAuthnPolicyAcceptableAaguids" : [ ],
     "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
     "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
     "webAuthnPolicyPasswordlessRpId" : "",
     "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
     "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
     "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
     "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
     "webAuthnPolicyPasswordlessCreateTimeout" : 0,
     "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
     "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
     "users" : [ {
       "id" : "86a10f0a-b059-47d5-ad3b-c1af61ef7a24",
       "createdTimestamp" : 1725376336508,
       "username" : "alice",
       "enabled" : true,
       "totp" : false,
       "emailVerified" : true,
       "firstName" : "",
       "lastName" : "",
       "email" : "alice@foo.bar",
       "credentials" : [ {
         "id" : "1f42e9f0-4671-4d6b-8bf2-b821aa561905",
         "type" : "password",
         "userLabel" : "My password",
         "createdDate" : 1725376348022,
         "secretData" : "{\"value\":\"v/vVIDUgC/zrobdRHj70MUlwq2C/UHDK99fj/nppWZ0ddjtTjPKmHI17wqPFVbExhS68eOtNIKSX8WkM6V7s0w==\",\"salt\":\"eypAeQKMnhE2w9B6HvIpxA==\",\"additionalParameters\":{}}",
         "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
       } ],
       "disableableCredentialTypes" : [ ],
       "requiredActions" : [ ],
       "realmRoles" : [ "default-roles-quarkus" ],
       "notBefore" : 0,
       "groups" : [ ]
     }, {
       "id" : "4eaac691-b5f1-42e8-992b-20b03a762e43",
       "createdTimestamp" : 1725376357682,
       "username" : "bob",
       "enabled" : true,
       "totp" : false,
       "emailVerified" : true,
       "firstName" : "",
       "lastName" : "",
       "email" : "bob@foo.bar",
       "credentials" : [ {
         "id" : "1ede1bcc-91c5-44bf-9e2e-3aede86c0362",
         "type" : "password",
         "userLabel" : "My password",
         "createdDate" : 1725376366190,
         "secretData" : "{\"value\":\"UrDTibAf7KcVXyUFDHd+kSDEPdbVB7Sd/Etooodwu7JKuxYjjVr+9oPBjptfGasG130xEMA+/BHWm1BIWJ5OEA==\",\"salt\":\"+k+nQg6rMZQJzbjOz0e43Q==\",\"additionalParameters\":{}}",
         "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
       } ],
       "disableableCredentialTypes" : [ ],
       "requiredActions" : [ ],
       "realmRoles" : [ "default-roles-quarkus" ],
       "notBefore" : 0,
       "groups" : [ ]
     } ],
     "scopeMappings" : [ {
       "clientScope" : "offline_access",
       "roles" : [ "offline_access" ]
     } ],
     "clientScopeMappings" : {
       "account" : [ {
         "client" : "account-console",
         "roles" : [ "manage-account" ]
       } ]
     },
     "clients" : [ {
       "id" : "be3d8cda-c137-4420-a1bc-b5224cfde9dd",
       "clientId" : "account",
       "name" : "${client_account}",
       "rootUrl" : "${authBaseUrl}",
       "baseUrl" : "/realms/quarkus/account/",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ "/realms/quarkus/account/*" ],
       "webOrigins" : [ ],
       "notBefore" : 0,
       "bearerOnly" : false,
       "consentRequired" : false,
       "standardFlowEnabled" : true,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : false,
       "serviceAccountsEnabled" : false,
       "publicClient" : true,
       "frontchannelLogout" : false,
       "protocol" : "openid-connect",
       "attributes" : {
         "post.logout.redirect.uris" : "+"
       },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : false,
       "nodeReRegistrationTimeout" : 0,
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     }, {
       "id" : "19c902f0-07c8-4ce3-8ed2-a8ec0d4666f2",
       "clientId" : "account-console",
       "name" : "${client_account-console}",
       "rootUrl" : "${authBaseUrl}",
       "baseUrl" : "/realms/quarkus/account/",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ "/realms/quarkus/account/*" ],
       "webOrigins" : [ ],
       "notBefore" : 0,
       "bearerOnly" : false,
       "consentRequired" : false,
       "standardFlowEnabled" : true,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : false,
       "serviceAccountsEnabled" : false,
       "publicClient" : true,
       "frontchannelLogout" : false,
       "protocol" : "openid-connect",
       "attributes" : {
         "post.logout.redirect.uris" : "+",
         "pkce.code.challenge.method" : "S256"
       },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : false,
       "nodeReRegistrationTimeout" : 0,
       "protocolMappers" : [ {
         "id" : "d8530f6f-7483-4625-84c8-474321bf1817",
         "name" : "audience resolve",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-audience-resolve-mapper",
         "consentRequired" : false,
         "config" : { }
       } ],
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     }, {
       "id" : "d686cf65-247a-4a01-80a0-2ae6a9aafe24",
       "clientId" : "admin-cli",
       "name" : "${client_admin-cli}",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ ],
       "webOrigins" : [ ],
       "notBefore" : 0,
       "bearerOnly" : false,
       "consentRequired" : false,
       "standardFlowEnabled" : false,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : true,
       "serviceAccountsEnabled" : false,
       "publicClient" : true,
       "frontchannelLogout" : false,
       "protocol" : "openid-connect",
       "attributes" : { },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : false,
       "nodeReRegistrationTimeout" : 0,
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     }, {
       "id" : "d095ad06-e38a-4509-b367-cc35e025a113",
       "clientId" : "avenger-client",
       "name" : "",
       "description" : "",
       "rootUrl" : "",
       "adminUrl" : "",
       "baseUrl" : "",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ "*" ],
       "webOrigins" : [ "*" ],
       "notBefore" : 0,
       "bearerOnly" : false,
       "consentRequired" : false,
       "standardFlowEnabled" : true,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : true,
       "serviceAccountsEnabled" : false,
       "publicClient" : true,
       "frontchannelLogout" : true,
       "protocol" : "openid-connect",
       "attributes" : {
         "oidc.ciba.grant.enabled" : "false",
         "display.on.consent.screen" : "false",
         "oauth2.device.authorization.grant.enabled" : "false",
         "backchannel.logout.session.required" : "true",
         "backchannel.logout.revoke.offline.tokens" : "false"
       },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : true,
       "nodeReRegistrationTimeout" : -1,
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     }, {
       "id" : "84246dea-3d3d-4bad-b54a-03b52581bb22",
       "clientId" : "broker",
       "name" : "${client_broker}",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ ],
       "webOrigins" : [ ],
       "notBefore" : 0,
       "bearerOnly" : true,
       "consentRequired" : false,
       "standardFlowEnabled" : true,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : false,
       "serviceAccountsEnabled" : false,
       "publicClient" : false,
       "frontchannelLogout" : false,
       "protocol" : "openid-connect",
       "attributes" : { },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : false,
       "nodeReRegistrationTimeout" : 0,
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     }, {
       "id" : "b83f860c-759b-46b4-b801-3fb76da8c3f4",
       "clientId" : "realm-management",
       "name" : "${client_realm-management}",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ ],
       "webOrigins" : [ ],
       "notBefore" : 0,
       "bearerOnly" : true,
       "consentRequired" : false,
       "standardFlowEnabled" : true,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : false,
       "serviceAccountsEnabled" : false,
       "publicClient" : false,
       "frontchannelLogout" : false,
       "protocol" : "openid-connect",
       "attributes" : { },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : false,
       "nodeReRegistrationTimeout" : 0,
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     }, {
       "id" : "57ae0dd7-2cc5-47ac-873f-4cd320e85b10",
       "clientId" : "security-admin-console",
       "name" : "${client_security-admin-console}",
       "rootUrl" : "${authAdminUrl}",
       "baseUrl" : "/admin/quarkus/console/",
       "surrogateAuthRequired" : false,
       "enabled" : true,
       "alwaysDisplayInConsole" : false,
       "clientAuthenticatorType" : "client-secret",
       "redirectUris" : [ "/admin/quarkus/console/*" ],
       "webOrigins" : [ "+" ],
       "notBefore" : 0,
       "bearerOnly" : false,
       "consentRequired" : false,
       "standardFlowEnabled" : true,
       "implicitFlowEnabled" : false,
       "directAccessGrantsEnabled" : false,
       "serviceAccountsEnabled" : false,
       "publicClient" : true,
       "frontchannelLogout" : false,
       "protocol" : "openid-connect",
       "attributes" : {
         "post.logout.redirect.uris" : "+",
         "pkce.code.challenge.method" : "S256"
       },
       "authenticationFlowBindingOverrides" : { },
       "fullScopeAllowed" : false,
       "nodeReRegistrationTimeout" : 0,
       "protocolMappers" : [ {
         "id" : "255c32a2-4eb3-4eef-9dbe-737509f113d1",
         "name" : "locale",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "locale",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "locale",
           "jsonType.label" : "String"
         }
       } ],
       "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
       "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
     } ],
     "clientScopes" : [ {
       "id" : "d48c9b79-ff25-4f17-97a4-8776134746ef",
       "name" : "profile",
       "description" : "OpenID Connect built-in scope: profile",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "true",
         "display.on.consent.screen" : "true",
         "consent.screen.text" : "${profileScopeConsentText}"
       },
       "protocolMappers" : [ {
         "id" : "136a5e9c-005a-4a08-8161-b97e8096a941",
         "name" : "picture",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "picture",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "picture",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "e9979756-e131-4445-a66a-94478fca30be",
         "name" : "nickname",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "nickname",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "nickname",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "72840944-e4ce-4f43-bd79-9250faea71ce",
         "name" : "family name",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-property-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "lastName",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "family_name",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "8e03d48d-77fd-4385-976e-390a15606671",
         "name" : "full name",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-full-name-mapper",
         "consentRequired" : false,
         "config" : {
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "userinfo.token.claim" : "true"
         }
       }, {
         "id" : "173dda3e-82a7-4b4d-a14c-f8a089288a8e",
         "name" : "birthdate",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "birthdate",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "birthdate",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "388c5254-99d1-408b-bc91-3a084e603660",
         "name" : "gender",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "gender",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "gender",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "206f6e39-fcc0-4027-bef4-80583a68c283",
         "name" : "username",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-property-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "username",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "preferred_username",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "feebfee5-6c23-42f2-be6a-94a71b0d4ecf",
         "name" : "given name",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-property-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "firstName",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "given_name",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "18cc1ccc-838a-428d-a44a-9f157bf8eae5",
         "name" : "middle name",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "middleName",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "middle_name",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "83d936c3-ff57-4cb7-bb36-2a69090492ab",
         "name" : "profile",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "profile",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "profile",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "7b158cdc-f114-41ae-b1bf-65e5c61bdae3",
         "name" : "updated at",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "updatedAt",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "updated_at",
           "jsonType.label" : "long"
         }
       }, {
         "id" : "e20a9fdc-e88c-4af4-a4b5-df8393a54c67",
         "name" : "website",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "website",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "website",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "50305e63-6707-4a51-8973-abdd7e22d09d",
         "name" : "zoneinfo",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "zoneinfo",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "zoneinfo",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "32885cd3-6e7b-479e-9e3d-55121762f8dc",
         "name" : "locale",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "locale",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "locale",
           "jsonType.label" : "String"
         }
       } ]
     }, {
       "id" : "33a7da3e-c3a5-4dfd-8ea3-5d8a34fbcb97",
       "name" : "roles",
       "description" : "OpenID Connect scope for add user roles to the access token",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "false",
         "display.on.consent.screen" : "true",
         "consent.screen.text" : "${rolesScopeConsentText}"
       },
       "protocolMappers" : [ {
         "id" : "4fa93d23-dc32-49a7-9ba6-ed810a51a1e8",
         "name" : "client roles",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-client-role-mapper",
         "consentRequired" : false,
         "config" : {
           "user.attribute" : "foo",
           "access.token.claim" : "true",
           "claim.name" : "resource_access.${client_id}.roles",
           "jsonType.label" : "String",
           "multivalued" : "true"
         }
       }, {
         "id" : "62f6a551-3b5f-4901-8bd9-e49c9e452fa2",
         "name" : "realm roles",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-realm-role-mapper",
         "consentRequired" : false,
         "config" : {
           "user.attribute" : "foo",
           "access.token.claim" : "true",
           "claim.name" : "realm_access.roles",
           "jsonType.label" : "String",
           "multivalued" : "true"
         }
       }, {
         "id" : "022658ba-f8c7-4839-99a3-55f9b21ef536",
         "name" : "audience resolve",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-audience-resolve-mapper",
         "consentRequired" : false,
         "config" : { }
       } ]
     }, {
       "id" : "9834ea60-d638-4446-81f9-ce9e6ca86bb1",
       "name" : "phone",
       "description" : "OpenID Connect built-in scope: phone",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "true",
         "display.on.consent.screen" : "true",
         "consent.screen.text" : "${phoneScopeConsentText}"
       },
       "protocolMappers" : [ {
         "id" : "081265a7-be40-4e0e-9fae-39b915817cf2",
         "name" : "phone number",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "phoneNumber",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "phone_number",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "340695af-f745-4606-8082-35bb4504dbed",
         "name" : "phone number verified",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-attribute-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "phoneNumberVerified",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "phone_number_verified",
           "jsonType.label" : "boolean"
         }
       } ]
     }, {
       "id" : "2c39e030-b374-409f-9054-a47f08fb2e2a",
       "name" : "microprofile-jwt",
       "description" : "Microprofile - JWT built-in scope",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "true",
         "display.on.consent.screen" : "false"
       },
       "protocolMappers" : [ {
         "id" : "a74f7504-1505-4d94-a1cf-cb1731868fa4",
         "name" : "groups",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-realm-role-mapper",
         "consentRequired" : false,
         "config" : {
           "multivalued" : "true",
           "user.attribute" : "foo",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "groups",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "da6bd9e0-de75-4fc3-8941-000f19e96a9b",
         "name" : "upn",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-property-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "username",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "upn",
           "jsonType.label" : "String"
         }
       } ]
     }, {
       "id" : "31dd11e3-96bc-4ee7-a991-e918c4a87bdb",
       "name" : "offline_access",
       "description" : "OpenID Connect built-in scope: offline_access",
       "protocol" : "openid-connect",
       "attributes" : {
         "consent.screen.text" : "${offlineAccessScopeConsentText}",
         "display.on.consent.screen" : "true"
       }
     }, {
       "id" : "869bfc76-109a-48dc-83f2-563123d05da2",
       "name" : "role_list",
       "description" : "SAML role list",
       "protocol" : "saml",
       "attributes" : {
         "consent.screen.text" : "${samlRoleListScopeConsentText}",
         "display.on.consent.screen" : "true"
       },
       "protocolMappers" : [ {
         "id" : "352273e6-be1f-4399-a855-e7d6e35d1061",
         "name" : "role list",
         "protocol" : "saml",
         "protocolMapper" : "saml-role-list-mapper",
         "consentRequired" : false,
         "config" : {
           "single" : "false",
           "attribute.nameformat" : "Basic",
           "attribute.name" : "Role"
         }
       } ]
     }, {
       "id" : "4b065961-b17d-4714-8265-7105fa93da39",
       "name" : "web-origins",
       "description" : "OpenID Connect scope for add allowed web origins to the access token",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "false",
         "display.on.consent.screen" : "false",
         "consent.screen.text" : ""
       },
       "protocolMappers" : [ {
         "id" : "513efb9d-7e55-41df-afaa-80f2366ff4ff",
         "name" : "allowed web origins",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-allowed-origins-mapper",
         "consentRequired" : false,
         "config" : { }
       } ]
     }, {
       "id" : "984d1928-9eba-4f67-b5c3-969ca7191a8d",
       "name" : "acr",
       "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "false",
         "display.on.consent.screen" : "false"
       },
       "protocolMappers" : [ {
         "id" : "6686129b-3614-4507-953d-e8c672b57470",
         "name" : "acr loa level",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-acr-mapper",
         "consentRequired" : false,
         "config" : {
           "id.token.claim" : "true",
           "access.token.claim" : "true"
         }
       } ]
     }, {
       "id" : "0b52c9a9-1d3f-4f94-b8a7-e839f2b3c77d",
       "name" : "address",
       "description" : "OpenID Connect built-in scope: address",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "true",
         "display.on.consent.screen" : "true",
         "consent.screen.text" : "${addressScopeConsentText}"
       },
       "protocolMappers" : [ {
         "id" : "b2d3ff04-bc53-445e-849c-f52b6b1a2c86",
         "name" : "address",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-address-mapper",
         "consentRequired" : false,
         "config" : {
           "user.attribute.formatted" : "formatted",
           "user.attribute.country" : "country",
           "user.attribute.postal_code" : "postal_code",
           "userinfo.token.claim" : "true",
           "user.attribute.street" : "street",
           "id.token.claim" : "true",
           "user.attribute.region" : "region",
           "access.token.claim" : "true",
           "user.attribute.locality" : "locality"
         }
       } ]
     }, {
       "id" : "05b32b72-3613-44ed-8017-69a67cb8ae2a",
       "name" : "email",
       "description" : "OpenID Connect built-in scope: email",
       "protocol" : "openid-connect",
       "attributes" : {
         "include.in.token.scope" : "true",
         "display.on.consent.screen" : "true",
         "consent.screen.text" : "${emailScopeConsentText}"
       },
       "protocolMappers" : [ {
         "id" : "55912f08-ba23-43b0-bd04-890d9b43381e",
         "name" : "email",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-property-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "email",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "email",
           "jsonType.label" : "String"
         }
       }, {
         "id" : "bf7b3a03-090a-4d5e-8338-f2d9fd3fc369",
         "name" : "email verified",
         "protocol" : "openid-connect",
         "protocolMapper" : "oidc-usermodel-property-mapper",
         "consentRequired" : false,
         "config" : {
           "userinfo.token.claim" : "true",
           "user.attribute" : "emailVerified",
           "id.token.claim" : "true",
           "access.token.claim" : "true",
           "claim.name" : "email_verified",
           "jsonType.label" : "boolean"
         }
       } ]
     } ],
     "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
     "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
     "browserSecurityHeaders" : {
       "contentSecurityPolicyReportOnly" : "",
       "xContentTypeOptions" : "nosniff",
       "xRobotsTag" : "none",
       "xFrameOptions" : "SAMEORIGIN",
       "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
       "xXSSProtection" : "1; mode=block",
       "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
     },
     "smtpServer" : { },
     "eventsEnabled" : false,
     "eventsListeners" : [ "jboss-logging" ],
     "enabledEventTypes" : [ ],
     "adminEventsEnabled" : false,
     "adminEventsDetailsEnabled" : false,
     "identityProviders" : [ ],
     "identityProviderMappers" : [ ],
     "components" : {
       "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
         "id" : "a27da895-cf7d-474e-8803-269c0aac62fe",
         "name" : "Allowed Protocol Mapper Types",
         "providerId" : "allowed-protocol-mappers",
         "subType" : "anonymous",
         "subComponents" : { },
         "config" : {
           "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper" ]
         }
       }, {
         "id" : "1355ba91-0433-4b1b-9440-b9cb755644ef",
         "name" : "Allowed Client Scopes",
         "providerId" : "allowed-client-templates",
         "subType" : "authenticated",
         "subComponents" : { },
         "config" : {
           "allow-default-scopes" : [ "true" ]
         }
       }, {
         "id" : "bdefa9e6-20dc-4b6e-b215-cb20a4baab9c",
         "name" : "Allowed Client Scopes",
         "providerId" : "allowed-client-templates",
         "subType" : "anonymous",
         "subComponents" : { },
         "config" : {
           "allow-default-scopes" : [ "true" ]
         }
       }, {
         "id" : "82194c4e-2e9a-4282-ac28-1e52f7db2e1c",
         "name" : "Full Scope Disabled",
         "providerId" : "scope",
         "subType" : "anonymous",
         "subComponents" : { },
         "config" : { }
       }, {
         "id" : "77790ab5-6e1f-4e1b-b941-073e2bf501e8",
         "name" : "Max Clients Limit",
         "providerId" : "max-clients",
         "subType" : "anonymous",
         "subComponents" : { },
         "config" : {
           "max-clients" : [ "200" ]
         }
       }, {
         "id" : "dad47c04-2292-476e-b2e4-1f41ed189bbc",
         "name" : "Trusted Hosts",
         "providerId" : "trusted-hosts",
         "subType" : "anonymous",
         "subComponents" : { },
         "config" : {
           "host-sending-registration-request-must-match" : [ "true" ],
           "client-uris-must-match" : [ "true" ]
         }
       }, {
         "id" : "58c4113d-1ee6-4348-9b82-5db7a89273f5",
         "name" : "Allowed Protocol Mapper Types",
         "providerId" : "allowed-protocol-mappers",
         "subType" : "authenticated",
         "subComponents" : { },
         "config" : {
           "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper", "oidc-full-name-mapper" ]
         }
       }, {
         "id" : "981b09e4-45e9-4c62-a471-58be0782f4de",
         "name" : "Consent Required",
         "providerId" : "consent-required",
         "subType" : "anonymous",
         "subComponents" : { },
         "config" : { }
       } ],
       "org.keycloak.keys.KeyProvider" : [ {
         "id" : "d1ef295a-b314-4cab-8693-c39a58f64ec7",
         "name" : "aes-generated",
         "providerId" : "aes-generated",
         "subComponents" : { },
         "config" : {
           "kid" : [ "8368afba-ec02-4289-a6d5-f2b4dd37ce8e" ],
           "secret" : [ "XiYVSbOW7I7yx1lMVIjZ5A" ],
           "priority" : [ "100" ]
         }
       }, {
         "id" : "f66c2bd9-1880-43cd-972d-b1cdb4fe1402",
         "name" : "rsa-generated",
         "providerId" : "rsa-generated",
         "subComponents" : { },
         "config" : {
           "privateKey" : [ "MIIEpAIBAAKCAQEAw8+nVDCqonGZip0Nk1LX6xvHo49tt8JKNk5h0wH8BxhRL5LNA0R84iYp7hgzLKv4wBBrK7G7Np2qsMXaaPS9MhuoEdouPcVwAegAXJwR+p0TWdHFGy0FNH2zN6N3JdQzX64usBvPlynFCgGxAPQZoT95/bp517NGZpz3kPBRTrzYzNJhk+3egJPKi6h531YAla1Jyl4tUxnL/lBAVoCPfr+VtvNrAKnrK5YJRoWKkCs/qemFkVL0QjW/NZvWpjSh6/bGNIfzEPb/T3HwmxsVB876/OCXdWUpzNBpyBL89eEFkDy33/hFOFYc0Xu1c9nvIG+XeWB2Fznxz8127NMLRwIDAQABAoIBAEyr2xO6qJ3JyHq/q0ij+Bq9umqfZzE8WO2xvFkwnjwy99searscTqAInIN3o1YbEmA2LZii07D7hJIKLs7JAeoEbUdsPI4AaK6+ZqHclKeiaKjTXBAbjT2z+IBRN/6ue907qVlY0myYtOgJqIK8keqTHdPNeBcPQgI89S0iBFxFIo80qCd3IMy+FB6rwGmJuQCZg23Il3WAfJrdknYAMVTlk5Ux2SFaFm2gSJZlzavUnELmuRAkfO+4yTjRCiFB9bC2/rMIl5rH6mOYVWlqv2Ct03ADKaegmxDUz3mRoeZyC/4aMpFZXbVlkkfzU9wrQeoSHTO4r58U6Sowbmc61UkCgYEA95ybWLEXI9EUpCx0jYofgrp0417YKfLE16akb98rPoa1SINRQikI7m73Bp+Ak3d4KCr5vJgWsxfOYwi2QJ+TVbSskJznesXzfsauVbHSOIffw5c2EaX5P1nVuUCfiDI8D8qOgC+jO3ftOItz2wf8MxrgHbLVM2/pexCiQaVYuGkCgYEAynHPa4ckKRtHakf/9lDkUtivraGHTsJfMuOA4lo6BgXnIZqNSAziPNnDldoblc8RkuoLZOKnc4SABXj/E0l5PU4X3wKP4NzyqS0ujuCvBeBGpSuHnrAE9hJkfMJ6ZlVHsJJqsrKkbUKKELJVm7ocrCQ/F1BRsfp787DK1/yZsC8CgYEAvaSSTkGD6Yiu+Hab5fPN4oAQGjx/7tDi9g/JjW0tX7woiBsbV0K6dnNCey4aeddcjdcsYsdRS2WGSs9XVvNhEplIOZISsDOAJK7iwvtoeKeIN/NOFAI8fcq+KB5YkSV4XtfSgFb7/AYEB/S2jSD2heWllNls9PJXrku1GfYbl1ECgYEAj7NpwLIVAPjUIKUrE/UnnYcibOWT3lwqpzzGZ+YT+eKGxlumndZHYVpSczR3EEgD+X0YyWv54Q3Usg3JQi+NV+7vEuYGq18rANuJiPIESu+ANg5IHmRjoSg9HDIQIEO4t6W3B1G3Vbc9ucxc6EWbxLWV8z6YPvXGtpxv4BD2JxECgYAhVbm8drMjnKomGhlUrLPw0ujm3R0hBct0U0MIMs27MeZLDS1NfPHFWCAoX2YURwl6/i7yfx5ZnYKxJ9V5RN7v40qQLENAvmsKxIKP0/yt04xmPgqYTvA7AlXluhFsCjjb/iqAdqKtoC/g5MusfamRchxKO6mRpSs4ZwdS/h4m9w==" ],
           "keyUse" : [ "SIG" ],
           "certificate" : [ "MIICnTCCAYUCBgGRuHFUPTANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTI0MDkwMzE1MTAyMFoXDTM0MDkwMzE1MTIwMFowEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPPp1QwqqJxmYqdDZNS1+sbx6OPbbfCSjZOYdMB/AcYUS+SzQNEfOImKe4YMyyr+MAQayuxuzadqrDF2mj0vTIbqBHaLj3FcAHoAFycEfqdE1nRxRstBTR9szejdyXUM1+uLrAbz5cpxQoBsQD0GaE/ef26edezRmac95DwUU682MzSYZPt3oCTyouoed9WAJWtScpeLVMZy/5QQFaAj36/lbbzawCp6yuWCUaFipArP6nphZFS9EI1vzWb1qY0oev2xjSH8xD2/09x8JsbFQfO+vzgl3VlKczQacgS/PXhBZA8t9/4RThWHNF7tXPZ7yBvl3lgdhc58c/NduzTC0cCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEArufNBH6m4qpKrCel7UAzVdCfbSzQwc2XDbaQpN2jDP1ajysBWgIVs8Cln+ltV2T4KQ02MLOmor95tnN2zPGwXRDjNxWT/OHZX/j/rX2f2d3YBtsDBrXjM6SZoXNx91UUrrlQsGXY4S1ZxcN3WI6kIMWx1vOBztkJQLQil03f6Me334vR7BvPJBLk5PxIpokycFzMzEnJaHSORChtjJeYKO9nF2QBgRQpFDPBf6XLTxgt+PWUGr2lyZlpEQ2F5D6Hucw6gx9TydfgWACMSDszuTC9WGujjQBPvy7OubG0qPfiJEUJ+ewRs7JNcKGzMlAhvf7yxgCBawaIk4nopsEznw==" ],
           "priority" : [ "100" ]
         }
       }, {
         "id" : "d732a089-d006-439d-a4c4-2e7b47587798",
         "name" : "hmac-generated",
         "providerId" : "hmac-generated",
         "subComponents" : { },
         "config" : {
           "kid" : [ "4e48af70-02e3-4de4-a5af-754debd7ed87" ],
           "secret" : [ "yypgL-wdS_D5lwuS5-Y_AriTKx_pw8YSsRBR5xcdxsAtFDlzYKBxS9hUxYF7j8McHjzA04BP8_5gTCVa9JKU3w" ],
           "priority" : [ "100" ],
           "algorithm" : [ "HS256" ]
         }
       }, {
         "id" : "42d74944-b03a-4132-ac04-27b3c7d11f8a",
         "name" : "rsa-enc-generated",
         "providerId" : "rsa-enc-generated",
         "subComponents" : { },
         "config" : {
           "privateKey" : [ "MIIEpAIBAAKCAQEApvSx9qdUZM32UQFe3xbqcf0IwvfbzWKgI8Ke96zmSqIsTxNOo/8NpjMQYkxWMJHlsLM05DR2rModOsXb7xsGIx5ktqBdw+PyUwGsY8FESpxCpzpcTg5Pn3p3lY26p4lXnBgiyg03SRsuUWEzFuD7bIrBNhHJh5LChYsAQV8YJRJM6WQ6Gv5ZMrC8Bc8tlCS4ANk4z7VFlNDDq6FLXIh2MB4ZImX9ebtElhWHvygh2O7Depp871LvF96cwJ71le90/6YsQ120cPDvOzz+s3uf2ASzs+pU1HXfyw2dMNWMqsYmqa8HqNhGchzXtdHxowsPN7876y2hY2OLgXi2o9+2vwIDAQABAoIBAANo6vuRJlGavUWhRAlFZAto8hVdT5FtyryAPJPtZZSvpD0HNWt3CZXT5ClFytraF/lYZ6OjiKr1w8wP/3JuOF1eQQtT0iZukOPuHFG7QERP1bKpp/n2I90reKbGysGiNfZbrdY3l+H32qXR2OPGO4xXdyO+EEIjFrL4iExNf2Y+ZW3gadngaWS4J9dLznChNaZvk46kl5kqmtuJBzw60OGINpyhBpq1dXKFlkiP+IChHWLC6poypCqZu+LetNKccgPh0pzjhKbtbwuyrUZKXAK07v/ITWwqvnGpAkuTBPxYJEFp9N92rthi12n0wzpU0tiULmeNEIKnN44GsMXXcoUCgYEA6lXeOMTAGqHb0RrQmYrCxyFeIWr8MfWTxl+HzC8U8X3Wcnh/KfXI00zhDcBFwkE7ZT4xu8co1x+GQso/xIGzYQdTHRlp4/p1+O0+vyVHkNGS0kSQQ6viMHxJvO9EkCDh2HN/DAlL2uoLC57+mKat6it5g6Vbi0StB98cRrZ8/iMCgYEAtmQfEHyKUFPoCDCVoKwFB/zLtVTR5OfIOKgFdV++Fo9z5mIOwTSQAoz/6ufJ+bpkR5hxSqZxvv0MzoPKQoS9P80hhi6c+ZgHo15mG2nvJd4yDm9jyDL3+pYdG1bU3zTaV0ktWJcfV+oN0aykpS86lqyjP6O8FHPgEr63UtmMWLUCgYEA3G4Jq7zoOCUpcXmX39b3gfmRYj4RHa20ZFZYl2lyefe1UdinRgE9+AXJbfX/qMtT49itT8X4VOQCl7FIasDWy97n/+d4BEwFzTLeY0/eEgwR4Fk+m2mES7eeZWttQ2arC8EZMWlNQZAG89eMBmxEDJL4qy1Q/6CKY20sXBgtW6ECgYAJc364l/uC1hY79miKft9z3oGfz9lghzI03WALCP8MpDpZQdOJ53Ne7neEcKZirmnr29ZjC+TxBKPZP7MHZ2F3IOYP0fKIbHxY1tdrrD2cNLtbTCJbiWiYL5cqh4FYX6DAzSXwZURWheZZaxzNAnmCvUdoUM+6L5b44bEWNfez0QKBgQCFqaEgnoNHEBTgmyqOLkhudvkbuBjrImdl3+J5+57Rfln/ZtX8/PS7YTd5X2QlhzWhZjM4i4FOih/FiKv1lRqsyBq6Gh0phYliNIL2MTZ7ln0GQ11gt9YqeDgKK+6SNh5RdwGca54ocIl5PghynshW3xae+pxYUW1rTxPfXxt6Ew==" ],
           "keyUse" : [ "ENC" ],
           "certificate" : [ "MIICnTCCAYUCBgGRuHFVJTANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWFya3VzMB4XDTI0MDkwMzE1MTAyMFoXDTM0MDkwMzE1MTIwMFowEjEQMA4GA1UEAwwHcXVhcmt1czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKb0sfanVGTN9lEBXt8W6nH9CML3281ioCPCnves5kqiLE8TTqP/DaYzEGJMVjCR5bCzNOQ0dqzKHTrF2+8bBiMeZLagXcPj8lMBrGPBREqcQqc6XE4OT596d5WNuqeJV5wYIsoNN0kbLlFhMxbg+2yKwTYRyYeSwoWLAEFfGCUSTOlkOhr+WTKwvAXPLZQkuADZOM+1RZTQw6uhS1yIdjAeGSJl/Xm7RJYVh78oIdjuw3qafO9S7xfenMCe9ZXvdP+mLENdtHDw7zs8/rN7n9gEs7PqVNR138sNnTDVjKrGJqmvB6jYRnIc17XR8aMLDze/O+stoWNji4F4tqPftr8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWILQqRKHoYiEsG+G4BsBAXrCLjgPxr8MhMP/YQ42UM2TAaTWpojV6FqZFz036cYTQmcUj0sH27kfIPC9UnZQxsU50GOqwdV7DjE4koit8NbVTpp2x86oCCEkjmEx7RNuu17UvCT5My5whtvRvP9oDrjMFhDZLOmjmxvRBupIcZPEgyuRIZv0I7jx5EOEXFHmdjvIwh/vgdtq9kl5FZIPZy4+lf/PeZ4QJZ63SRC0NB9g5AezP+1SvgBavx4JNtttdqcGM9s6CjtKO5ZmSOt1WFSSRQ+Zr7LUr4xQaP4pXLCE7DpVgFdi+eOwoF8vUDILYYG0/ks623G8e7zjRODemg==" ],
           "priority" : [ "100" ],
           "algorithm" : [ "RSA-OAEP" ]
         }
       } ]
     },
     "internationalizationEnabled" : false,
     "supportedLocales" : [ ],
     "authenticationFlows" : [ {
       "id" : "16292ff2-a56a-4363-b848-c84a9dfeeeb8",
       "alias" : "Account verification options",
       "description" : "Method with which to verity the existing account",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "idp-email-verification",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "ALTERNATIVE",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "Verify Existing Account by Re-authentication",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "e1a46ba1-8469-4a14-9419-f0b29013851d",
       "alias" : "Authentication Options",
       "description" : "Authentication options.",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "basic-auth",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "basic-auth-otp",
         "authenticatorFlow" : false,
         "requirement" : "DISABLED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "auth-spnego",
         "authenticatorFlow" : false,
         "requirement" : "DISABLED",
         "priority" : 30,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "12602071-90cd-4c2a-a4e2-6a71af3f67c9",
       "alias" : "Browser - Conditional OTP",
       "description" : "Flow to determine if the OTP is required for the authentication",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "conditional-user-configured",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "auth-otp-form",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "7a4b103f-baf2-467b-93db-6419c74740ad",
       "alias" : "Direct Grant - Conditional OTP",
       "description" : "Flow to determine if the OTP is required for the authentication",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "conditional-user-configured",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "direct-grant-validate-otp",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "bfe92c88-7279-4d7c-8968-0cc3a05f3cf5",
       "alias" : "First broker login - Conditional OTP",
       "description" : "Flow to determine if the OTP is required for the authentication",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "conditional-user-configured",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "auth-otp-form",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "e97e9022-ef37-43c0-9080-0a6bb2b7b22a",
       "alias" : "Handle Existing Account",
       "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "idp-confirm-link",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "Account verification options",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "3517a359-286d-4e5d-a974-49ec200345c8",
       "alias" : "Reset - Conditional OTP",
       "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "conditional-user-configured",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "reset-otp",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "d813b377-d636-489b-811e-5ffbed25889d",
       "alias" : "User creation or linking",
       "description" : "Flow for the existing/non-existing user alternatives",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticatorConfig" : "create unique user config",
         "authenticator" : "idp-create-user-if-unique",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "ALTERNATIVE",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "Handle Existing Account",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "91317ce7-f177-4b3a-81f3-783900f40353",
       "alias" : "Verify Existing Account by Re-authentication",
       "description" : "Reauthentication of existing account",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "idp-username-password-form",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "CONDITIONAL",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "First broker login - Conditional OTP",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "9e08aa34-c515-4792-9fb2-5d6735a31549",
       "alias" : "browser",
       "description" : "browser based authentication",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "auth-cookie",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "auth-spnego",
         "authenticatorFlow" : false,
         "requirement" : "DISABLED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "identity-provider-redirector",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 25,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "ALTERNATIVE",
         "priority" : 30,
         "autheticatorFlow" : true,
         "flowAlias" : "forms",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "10f944fc-015a-463a-9dc6-71b54f99bf35",
       "alias" : "clients",
       "description" : "Base authentication for clients",
       "providerId" : "client-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "client-secret",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "client-jwt",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "client-secret-jwt",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 30,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "client-x509",
         "authenticatorFlow" : false,
         "requirement" : "ALTERNATIVE",
         "priority" : 40,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "229b3590-9247-4a9e-a28a-0d8aefb0fd88",
       "alias" : "direct grant",
       "description" : "OpenID Connect Resource Owner Grant",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "direct-grant-validate-username",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "direct-grant-validate-password",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "CONDITIONAL",
         "priority" : 30,
         "autheticatorFlow" : true,
         "flowAlias" : "Direct Grant - Conditional OTP",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "c62261a4-e0e5-4e90-aa35-3d4e92a192b9",
       "alias" : "docker auth",
       "description" : "Used by Docker clients to authenticate against the IDP",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "docker-http-basic-authenticator",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "d7c8f59f-6947-4f1e-9664-6502bcc3ed0e",
       "alias" : "first broker login",
       "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticatorConfig" : "review profile config",
         "authenticator" : "idp-review-profile",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "User creation or linking",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "8ccc193e-ed74-4367-9071-a6d709f898d1",
       "alias" : "forms",
       "description" : "Username, password, otp and other auth forms.",
       "providerId" : "basic-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "auth-username-password-form",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "CONDITIONAL",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "Browser - Conditional OTP",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "5c4ef370-eaab-4eb5-b123-fc694d771251",
       "alias" : "http challenge",
       "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "no-cookie-redirect",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : true,
         "flowAlias" : "Authentication Options",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "bacee497-d8c0-4167-be81-db083ce3e959",
       "alias" : "registration",
       "description" : "registration flow",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "registration-page-form",
         "authenticatorFlow" : true,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : true,
         "flowAlias" : "registration form",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "70118fd6-f02c-4c64-9c05-e0e031810880",
       "alias" : "registration form",
       "description" : "registration form",
       "providerId" : "form-flow",
       "topLevel" : false,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "registration-user-creation",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "registration-profile-action",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 40,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "registration-password-action",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 50,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "registration-recaptcha-action",
         "authenticatorFlow" : false,
         "requirement" : "DISABLED",
         "priority" : 60,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "3ede12da-4753-4633-9ad7-c30bcf951a8e",
       "alias" : "reset credentials",
       "description" : "Reset credentials for a user if they forgot their password or something",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "reset-credentials-choose-user",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "reset-credential-email",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 20,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticator" : "reset-password",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 30,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       }, {
         "authenticatorFlow" : true,
         "requirement" : "CONDITIONAL",
         "priority" : 40,
         "autheticatorFlow" : true,
         "flowAlias" : "Reset - Conditional OTP",
         "userSetupAllowed" : false
       } ]
     }, {
       "id" : "2dd9681e-0be6-4dbf-b7c7-8922c3a9061d",
       "alias" : "saml ecp",
       "description" : "SAML ECP Profile Authentication Flow",
       "providerId" : "basic-flow",
       "topLevel" : true,
       "builtIn" : true,
       "authenticationExecutions" : [ {
         "authenticator" : "http-basic-authenticator",
         "authenticatorFlow" : false,
         "requirement" : "REQUIRED",
         "priority" : 10,
         "autheticatorFlow" : false,
         "userSetupAllowed" : false
       } ]
     } ],
     "authenticatorConfig" : [ {
       "id" : "987cf712-6692-4f9b-aef2-d08f37b4cb8c",
       "alias" : "create unique user config",
       "config" : {
         "require.password.update.after.registration" : "false"
       }
     }, {
       "id" : "8d4aa5c3-478c-4f3f-abbe-bd342e84551c",
       "alias" : "review profile config",
       "config" : {
         "update.profile.on.first.login" : "missing"
       }
     } ],
     "requiredActions" : [ {
       "alias" : "CONFIGURE_TOTP",
       "name" : "Configure OTP",
       "providerId" : "CONFIGURE_TOTP",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 10,
       "config" : { }
     }, {
       "alias" : "terms_and_conditions",
       "name" : "Terms and Conditions",
       "providerId" : "terms_and_conditions",
       "enabled" : false,
       "defaultAction" : false,
       "priority" : 20,
       "config" : { }
     }, {
       "alias" : "UPDATE_PASSWORD",
       "name" : "Update Password",
       "providerId" : "UPDATE_PASSWORD",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 30,
       "config" : { }
     }, {
       "alias" : "UPDATE_PROFILE",
       "name" : "Update Profile",
       "providerId" : "UPDATE_PROFILE",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 40,
       "config" : { }
     }, {
       "alias" : "VERIFY_EMAIL",
       "name" : "Verify Email",
       "providerId" : "VERIFY_EMAIL",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 50,
       "config" : { }
     }, {
       "alias" : "delete_account",
       "name" : "Delete Account",
       "providerId" : "delete_account",
       "enabled" : false,
       "defaultAction" : false,
       "priority" : 60,
       "config" : { }
     }, {
       "alias" : "webauthn-register",
       "name" : "Webauthn Register",
       "providerId" : "webauthn-register",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 70,
       "config" : { }
     }, {
       "alias" : "webauthn-register-passwordless",
       "name" : "Webauthn Register Passwordless",
       "providerId" : "webauthn-register-passwordless",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 80,
       "config" : { }
     }, {
       "alias" : "update_user_locale",
       "name" : "Update User Locale",
       "providerId" : "update_user_locale",
       "enabled" : true,
       "defaultAction" : false,
       "priority" : 1000,
       "config" : { }
     } ],
     "browserFlow" : "browser",
     "registrationFlow" : "registration",
     "directGrantFlow" : "direct grant",
     "resetCredentialsFlow" : "reset credentials",
     "clientAuthenticationFlow" : "clients",
     "dockerAuthenticationFlow" : "docker auth",
     "attributes" : {
       "cibaBackchannelTokenDeliveryMode" : "poll",
       "cibaAuthRequestedUserHint" : "login_hint",
       "oauth2DevicePollingInterval" : "5",
       "clientOfflineSessionMaxLifespan" : "0",
       "clientSessionIdleTimeout" : "0",
       "clientOfflineSessionIdleTimeout" : "0",
       "cibaInterval" : "5",
       "cibaExpiresIn" : "120",
       "oauth2DeviceCodeLifespan" : "600",
       "parRequestUriLifespan" : "60",
       "clientSessionMaxLifespan" : "0",
       "frontendUrl" : "",
       "acr.loa.map" : "[]"
     },
     "keycloakVersion" : "19.0.2",
     "userManagedAccessAllowed" : false,
     "clientProfiles" : {
       "profiles" : [ ]
     },
     "clientPolicies" : {
       "policies" : [ ]
     }
   }
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:21.0.2
          args: ["start-dev", "--import-realm"]
          env:
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
          volumeMounts:
            - mountPath: /opt/keycloak/data/import
              name: car-rental-realm
      volumes:
        - name: car-rental-realm
          configMap:
            name: keycloak
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: keycloak
  name: keycloak
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: keycloak
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          resources:
            limits:
              memory: 150Mi
          volumeMounts:
            - mountPath: /data
              name: data
          env:
            - name: POSTGRES_DB
              value: quarkus
            - name: POSTGRES_USER
              value: quarkus
            - name: POSTGRES_PASSWORD
              value: quarkus
            - name: PGDATA
              value: /data/pgdata
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  clusterIP: None

